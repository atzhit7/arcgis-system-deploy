---
- name: find Prop file for installation
  find:
    paths: "/home"
    patterns: ".ESRI.properties.*"
    hidden: yes
    recurse: yes
  register: propfiles

- debug:
    var: propfiles.files[0]

- name: slurp ESRI Prop
  slurp:
    path: "{{ propfiles.files[0].path }}"
  register: slurp_file

- name: Get the install directory list
  set_fact:
    installdir_list: "{{ slurp_file.content | b64decode | regex_findall('Z_ArcGISPortal_INSTALL_DIR=(/[A-Za-z0-9-].*)') }}"

- name: check install directory as list
  debug:
    var: installdir_list

- name: Set and overwrite the fact of istall_dir as string
  set_fact:
    install_dir: "{{ installdir_list[0] }}"

- name: Set and overwrite the fact of service account
  set_fact: 
    arcgis_service_account: "{{ propfiles.files[0].pw_name }}"

- name: check user of file owner
  debug:
    var: arcgis_service_account

- name: Set and overwrite the fact of service account group
  set_fact: 
    arcgis_service_account_group: "{{ propfiles.files[0].gr_name }}"

- name: check user of file owner
  debug:
    var: arcgis_service_account_group


# ---
# - name: arcgis systemd service to get unit info
#   systemd:
#     state: stopped
#     name: "{{ service_name }}"
#   register: serviceresult

# - name: Set the fact of service status
#   set_fact: 
#     servicestatus: "{{ serviceresult.status }}"

# - name: Check the status
#   debug:
#     var: servicestatus

# - name: Set the fact of service status
#   set_fact: 
#     execstartinfo: "{{ serviceresult.status.ExecStart }}"
# - name: Set the fact of path
#   set_fact:
#     pathlist: "{{ execstartinfo | regex_findall('path=(/[A-Za-z0-9-].*?\\s)') | replace(' ','')}}"
# - name: Set and overwrite the fact of istall_dir
#   set_fact:
#     install_dir: "{{ pathlist[0] | dirname }}"
# - name: Check install directory
#   debug:
#     var: install_dir
# - name: Set and overwrite the fact of service account
#   set_fact: 
#     arcgis_service_account: "{{ serviceresult.status.User }}"
# - name: check
#   debug:
#     var: arcgis_service_account


- name: insert hostname properties for route53 dns
  file:
    path: "{{ install_dir }}/framework/etc/hostname.properties"
    state: touch
    owner: "{{ arcgis_service_account }}"
    group: "{{ arcgis_service_account_group }}"

- name: insert hostname properties for route53 dns
  lineinfile:
    path: "{{ install_dir }}/framework/etc/hostname.properties"
    line: "hostname={{ portal_internal_fqdn }}"
    create: yes
    backup: yes
    # state: present

- name: overwrite the variable portal_dir
  set_fact:
    portal_dir: "{{ install_dir }}/usr"

- name: insert setting into createportal properties file
  lineinfile:
    path: "{{ remote_temp_dest_dir }}/createportal.properties"
    line: "PORTAL_CONTENT_DIRECTORY = {{ portal_dir }}"

- name: set authorization path for properties
  set_fact:
    authorization_path_prop: "{{ remote_temp_dest_dir }}/{{ portal_authorizationfile }}"

- name: insert authorization path into createportal properties file
  lineinfile:
    path: "{{ remote_temp_dest_dir }}/createportal.properties"
    line: "PORTAL_LICENSE_FILE = {{ authorization_path_prop }}"

- name: insert initial portal username
  lineinfile:
    path: "{{ remote_temp_dest_dir }}/createportal.properties"
    line: "PORTAL_ADMIN_USERNAME = {{ portal_admin_user }}"

- name: insert initial portal user pw
  lineinfile:
    path: "{{ remote_temp_dest_dir }}/createportal.properties"
    line: "PORTAL_ADMIN_PASSWORD = {{ portal_admin_user_pw }}"

- name: overwrite the variable
  set_fact: 
    createportal_shell_location: "{{ install_dir }}/tools/createportal"